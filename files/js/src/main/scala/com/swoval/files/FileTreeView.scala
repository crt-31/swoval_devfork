// Do not edit this file manually. It is autogenerated.

package com.swoval.files

import com.swoval.functional.Filter
import java.io.IOException
import java.nio.file.Path
import java.util.List

/**
 * Lists all of the children of a particular directory up to a specified depth. It provides an
 * alternative to `java.nio.file.Files.walkFileTree` or `java.nio.file.Files.list` to recursively
 * list the contents of a directory. Implementations are provided in [[FileTreeViews]] including
 * native implementations for most popular platforms that can outperform the java built-ins.
 */
trait FileTreeView extends AutoCloseable {

  /**
   * List all of the files for the {@code path}, returning only those files that are accepted by the
   * provided filter.
   *
   * @param path the root path to list
   * @param maxDepth the maximum depth of subdirectories to query
   * @param filter include only paths accepted by the filter
   * @return a List of [[java.nio.file.Path]] instances accepted by the filter.
   */
  def list(path: Path, maxDepth: Int, filter: Filter[_ >: TypedPath]): List[TypedPath]

}
